
//Title:
//Version:
//Copyright:   Copyright (c) 2000
//Author:      Sean Gao
//Company:     Nortel Networks
//Description: Current  project file

package com.nortelnetworks.ims.cap.web.ua.pca.client;

import java.io.*;
import java.net.*;
import java.util.Enumeration;
import java.util.Properties;

public class HttpMessage
{

    public HttpMessage(URL servlet)
    {
        this.servlet = null;
        args = null;
        this.servlet = servlet;
    }

    public InputStream sendGetMessage()
        throws IOException
    {
        return sendGetMessage(null);
    }

    public InputStream sendGetMessage(Properties args)
        throws IOException
    {
        return sendGetMessage(args, null);
    }

    public InputStream sendGetMessage(Properties args, Properties cookies)
        throws IOException
    {
        String argString = "";
        if(args != null)
            argString = "?" + toEncodedString(args, "&");

        String cookieString = "";
        if(cookies != null)
            cookieString = toEncodedString(cookies, ";");

        URL url = new URL(servlet.toExternalForm() + argString);
        URLConnection con = url.openConnection();
        con.setUseCaches(false);
        con.setRequestProperty("Cookie", cookieString);

        return con.getInputStream();
    }

    public InputStream sendPostMessage()
        throws IOException
    {
        return sendPostMessage(null);
    }

    public InputStream sendPostMessage(Properties args)
        throws IOException
    {
        return sendPostMessage(args, null);
    }

    public InputStream sendPostMessage(Properties args, Properties cookies)
        throws IOException
    {
        String argString = "";
        if(args != null)
            argString = toEncodedString(args, "&");

        String cookieString = "";
        if(cookies != null)
            cookieString = toEncodedString(cookies, ";");

        URLConnection con = servlet.openConnection();
        con.setDoInput(true);
        con.setDoOutput(true);
        con.setUseCaches(false);
        con.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
        con.setRequestProperty("Cookie", cookieString);
        DataOutputStream out = new DataOutputStream(con.getOutputStream());
        out.writeBytes(argString);
        out.flush();
        out.close();
        return con.getInputStream();
    }

    public InputStream sendPostMessage(Serializable obj)
        throws IOException
    {
        URLConnection con = servlet.openConnection();
        con.setDoInput(true);
        con.setDoOutput(true);
        con.setUseCaches(false);
        con.setRequestProperty("Content-Type", "java-internal/" + obj.getClass().getName());
        ObjectOutputStream out = new ObjectOutputStream(con.getOutputStream());
        out.writeObject(obj);
        out.flush();
        out.close();
        return con.getInputStream();
    }

    private String toEncodedString(Properties args, String delim)
    {
        StringBuffer buf = new StringBuffer();
        Enumeration names = args.propertyNames();
        do
        {
            if(!names.hasMoreElements())
                break;
            String name = (String)names.nextElement();
            String value = args.getProperty(name);
            buf.append(URLEncoder.encode(name) + "=" + URLEncoder.encode(value));
            if(names.hasMoreElements())
                buf.append(delim);
        }
        while(true);
        return buf.toString();
    }

    URL servlet;
    String args;
}
